generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:../dev.db" // Replace with your SQLite file path
}

model Student {
    id          String              @id @default(uuid())
    name        String
    email       String              @unique
    classes     ClassEnrollment[]
    assignments StudentAssignment[]
    reportCards ReportCard[]
}

model Class {
    id               String            @id @default(uuid())
    name             String            @unique
    students         ClassEnrollment[]
    assignments      Assignment[]
    classGradeReport ClassGradeReport?
}

model ClassEnrollment {
    studentId String
    classId   String
    student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
    class     Class   @relation(fields: [classId], references: [id], onDelete: Cascade)

    @@id([studentId, classId])
}

model Assignment {
    id           String              @id @default(uuid())
    classId      String
    title        String
    class        Class               @relation(fields: [classId], references: [id], onDelete: Cascade)
    studentTasks StudentAssignment[]
}

model StudentAssignment {
    studentId    String
    assignmentId String
    grade        String?
    status       String     @default("NOT_STARTED")
    student      Student    @relation(fields: [studentId], references: [id], onDelete: Cascade)
    assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)

    @@id([studentId, assignmentId])
}

model ReportCard {
    id        String  @id @default(uuid())
    studentId String
    student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
}

model ClassGradeReport {
    id      String @id @default(uuid())
    classId String @unique
    class   Class  @relation(fields: [classId], references: [id], onDelete: Cascade)
}
